{
  "Kitronik_Move_Motor": "これはKitronik_Move_Motorパッケージです。\n\r\nKitronik MOVE Motorキットを動作(どうさ)させるためのブロックです。",
  "Kitronik_Move_Motor.HueInterpolationDirection": "レインボーブロックで使用(しよう)される、色相変化(しきそうへんか)の方向(ほうこう)オプション（エンドユーザーには表示(ひょうじ)されません）",
  "Kitronik_Move_Motor.MoveMotorZIP.clear": "Move Motor ZIP LEDのすべてのLEDをオフにします。\r\n変更(へんこう)を有効(ゆうこう)にするには、showを呼(よ)び出(だ)す必要(ひつよう)があります。",
  "Kitronik_Move_Motor.MoveMotorZIP.range": "LEDの範囲(はんい)を作成(さくせい)します。",
  "Kitronik_Move_Motor.MoveMotorZIP.range|param|length": "範囲内(はんいない)のLEDの数(かず)。例(れい)：4",
  "Kitronik_Move_Motor.MoveMotorZIP.range|param|start": "範囲を開始するためのLEDストリップのオフセット値",
  "Kitronik_Move_Motor.MoveMotorZIP.rotate": "LEDを前方に回転させます。\r\n変更を表示するには、showを呼び出す必要があります。",
  "Kitronik_Move_Motor.MoveMotorZIP.rotate|param|offset": "前方に回転するZIP LEDの数、例：1",
  "Kitronik_Move_Motor.MoveMotorZIP.setBrightness": "Move Motor ZIP LEDの明るさを設定します。このフラグは、将来のshow操作にのみ適用されます。",
  "Kitronik_Move_Motor.MoveMotorZIP.setBrightness|param|brightness": "0-255のLED輝度の尺度。例：255",
  "Kitronik_Move_Motor.MoveMotorZIP.setColor": "Move Motor LED 全体を指定された色として設定します (r、g、b の場合は 0-255 の範囲)。\r\n変更を表示するには、show を呼び出す必要があります。",
  "Kitronik_Move_Motor.MoveMotorZIP.setColor|param|rgb": "LEDのRGBカラーを設定します。",
  "Kitronik_Move_Motor.MoveMotorZIP.setZipLedColor": "ボード上の特定のZIP LEDを特定の色に設定します。\r\n変更を表示するには、showを呼び出す必要があります。",
  "Kitronik_Move_Motor.MoveMotorZIP.setZipLedColor|param|rgb": "ZIP LEDのRGBカラーを設定します。",
  "Kitronik_Move_Motor.MoveMotorZIP.setZipLedColor|param|zipLedNum": "文字列内のZIP LEDの位置を設定します。",
  "Kitronik_Move_Motor.MoveMotorZIP.show": "すべての変更をMove Motor ZIP LEDに送信します。",
  "Kitronik_Move_Motor.MoveMotorZIP.showColor": "ムーブモーターLED全体を指定された色で表示します（r、g、bの場合は0-255の範囲）。",
  "Kitronik_Move_Motor.MoveMotorZIP.showColor|param|rgb": "LEDのRGBカラーを表示します。",
  "Kitronik_Move_Motor.MoveMotorZIP.showRainbow": "すべてのLEDに虹色のパターンを表示します。",
  "Kitronik_Move_Motor.MoveMotorZIP.showRainbow|param|endHue": "虹の色相の終了値。例:360",
  "Kitronik_Move_Motor.MoveMotorZIP.showRainbow|param|startHue": "虹の色相の開始値。例：1",
  "Kitronik_Move_Motor.beepHorn": "ホーンを鳴らす",
  "Kitronik_Move_Motor.colors": "既知の色のRGB値を取得します",
  "Kitronik_Move_Motor.createMoveMotorZIPLED": "MOVEモーターボード用の新しいZIP LEDドライバーを作成します。",
  "Kitronik_Move_Motor.createMoveMotorZIPLED|param|numZips": "number of leds in the strip, eg: 4",
  "Kitronik_Move_Motor.equaliseSensorOffsets": "This function allows us to read the difference in the sensor outputs. \r\nIt assumes that both are over a similar surface, and hence any offset is a fixed offset caused by component tolerances.\r\nIf the sensors are over different surfaces it will reuslt in a false offset reading,and pants perfomance.\r\nWe do this to help hide the complexity of tolerance and similar from novice users, \r\nbut if you are an expert reading this comment then feel free to play with this functionand see what it does.",
  "Kitronik_Move_Motor.measure": "Measure the echo time (after trigger) and converts to cm or inches and returns as an int",
  "Kitronik_Move_Motor.measure|param|maxCmDistance": "maximum distance in centimeters (default is 500)",
  "Kitronik_Move_Motor.motorBalance": "To help the :MOVE motor drive in a straight line you can bias the motors.",
  "Kitronik_Move_Motor.motorBalance|param|balance": "number between 0 and 10 to help balance the motor speed",
  "Kitronik_Move_Motor.motorOff": "Turns off the specified motor.",
  "Kitronik_Move_Motor.motorOff|param|motor": "which motor to turn off",
  "Kitronik_Move_Motor.motorOn": "Sets the requested motor running in chosen direction at a set speed.\r\nif the PCA has not yet been initialised calls the initialisation routine.",
  "Kitronik_Move_Motor.motorOn|param|dir": "which direction to go",
  "Kitronik_Move_Motor.motorOn|param|motor": "which motor to turn on",
  "Kitronik_Move_Motor.motorOn|param|speed": "how fast to spin the motor",
  "Kitronik_Move_Motor.move": "Drives the :MOVE motor in the specified direction. Turns have a small amount of forward motion.",
  "Kitronik_Move_Motor.move|param|direction": "Direction to move in",
  "Kitronik_Move_Motor.move|param|speed": "How fast to go (0-100)",
  "Kitronik_Move_Motor.readDigitalPin": "Read the digital value of the pin selected.",
  "Kitronik_Move_Motor.readSensor": "Read sensor block allows user to read the value of the sensor (returns value in range 0-1023)",
  "Kitronik_Move_Motor.rgb": "Converts value to red, green, blue channels",
  "Kitronik_Move_Motor.rgb|param|blue": "value of the blue channel between 0 and 255. eg: 255",
  "Kitronik_Move_Motor.rgb|param|green": "value of the green channel between 0 and 255. eg: 255",
  "Kitronik_Move_Motor.rgb|param|red": "value of the red channel between 0 and 255. eg: 255",
  "Kitronik_Move_Motor.setUltrasonicUnits": "Set the distance measurement units to cm or inches (cm is default)",
  "Kitronik_Move_Motor.setUltrasonicUnits|param|unit": "desired conversion unit",
  "Kitronik_Move_Motor.soundSiren": "Turns on and off the siren that plays in the background.",
  "Kitronik_Move_Motor.spin": "Tunrs on the spot in the direction requested.",
  "Kitronik_Move_Motor.spin|param|direction": "Direction to spin in",
  "Kitronik_Move_Motor.spin|param|speed": "How fast to go (0-100)",
  "Kitronik_Move_Motor.stop": "Stops the :MOVE motor driving",
  "Kitronik_Move_Motor.turnRadius": "Changes how tight the :MOVE motor turns when move block is used with Left or Right",
  "Kitronik_Move_Motor.turnRadius|param|radius": "the tightness of the turn",
  "Kitronik_Move_Motor.writeAnalogPin": "Write the analog value of the pin selected.",
  "Kitronik_Move_Motor.writeDigitalPin": "Write the digital value of the pin selected.",
  "Kitronik_Move_Motor.writeServoPin": "Write the servo angle of the pin selected for driving a servo."
}
